package com.clicktable.config;

import com.clicktable.util.Constants;
import com.clicktable.util.UtilityMethods;
import com.stormpath.sdk.api.ApiKey;
import com.stormpath.sdk.api.ApiKeys;
import com.stormpath.sdk.application.Application;
import com.stormpath.sdk.application.ApplicationList;
import com.stormpath.sdk.application.Applications;
import com.stormpath.sdk.client.Client;
import com.stormpath.sdk.client.Clients;
import com.stormpath.sdk.client.Proxy;
import com.stormpath.sdk.tenant.Tenant;

public class StormpathConfig {

	private static StormpathConfig instance;
	private Client client;

	private Tenant tenant;

	public static StormpathConfig getInstance() {
		if (instance == null)
			instance = new StormpathConfig();
		return instance;
	}


	private StormpathConfig() 
	{   
	   						   
	    ApiKey apiKey = ApiKeys.builder().setId(UtilityMethods.getConfString("apiKey.id")).setSecret(UtilityMethods.getConfString("apiKey.secret")).build();
	    		//setFileLocation(Constants.STORMPATH_FILE).build();
	    client = Clients.builder().setApiKey(apiKey).build();
	    tenant = client.getCurrentTenant();
	}

	public Client getClient() {
		return client;
	}

	public Tenant getTenant() {
		return tenant;
	}

	public Application getApplication() {
		Tenant tenant = client.getCurrentTenant();
		ApplicationList applications = tenant.getApplications(Applications.where(Applications.name().eqIgnoreCase("My Application")));
		Application application = applications.iterator().next();
		return application;
	}

}
