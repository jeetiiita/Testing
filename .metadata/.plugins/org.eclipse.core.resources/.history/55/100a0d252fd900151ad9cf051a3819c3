package com.clicktable.support.model;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;

import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import play.data.validation.Constraints.Max;
import play.data.validation.Constraints.MaxLength;
import play.data.validation.Constraints.Min;
import play.data.validation.Constraints.Required;

import com.clicktable.support.util.Constants;
import com.clicktable.support.util.ErrorCodes;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

/**
 * j.yadav
 * 
 * @author s.gupta
 * @version $Revision: 1.0 $
 */
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(Include.NON_NULL)
@Entity
@Table(name = "tax")
public class Tax implements Serializable {

	/**
	 * Field serialVersionUID. (value is 2089447120263333078)
	 */
	private static final long serialVersionUID = 2089447120263333078L;

	/**
	 * Field guid.
	 */
	@Id
	@Required(message = ErrorCodes.GUID_REQUIRED)
	@MaxLength(message = ErrorCodes.GUID_MAXLENGTH, value = 50)
	@Column(name = "guid")
	private String guid;

	/**
	 * Field taxCode.
	 */
	@Required(message = ErrorCodes.INVOICE_TAX_CODE_REQUIRED)
	@MaxLength(message = ErrorCodes.INVOICE_TAX_CODE_MAXLENGTH, value = 10)
	@Column(name = "tax_code")
	private String taxCode;

	/**
	 * Field country.
	 */
	@Required(message = ErrorCodes.INVOICE_TAX_COUNTRY_REQUIRED)
	@Column(name = "country")
	private String country;

	/**
	 * Field state.
	 */
	@Required(message = ErrorCodes.INVOICE_TAX_STATE_REQUIRED)
	@Column(name = "state")
	private String state;

	/**
	 * Field validFrom.
	 */
	@Required(message = ErrorCodes.INVOICE_CATEGORY_VALID_FROM_REQUIRED)
	@Temporal(TemporalType.DATE)
	@Column(name = "valid_from")
	private Date validFrom;

	/**
	 * Field validTill.
	 */
	@Required(message = ErrorCodes.INVOICE_CATEGORY_VALID_TILL_REQUIRED)
	@Temporal(TemporalType.DATE)
	@Column(name = "valid_till")
	private Date validTill;

	/**
	 * Field taxYear.
	 */
	@Required(message = ErrorCodes.INVOICE_TAX_YEAR_REQUIRED)
	@Max(message = ErrorCodes.INVOICE_TAX_YEAR_MAX_VALUE, value = 2050)
	@Min(message = ErrorCodes.INVOICE_TAX_YEAR_MIN_VALUE, value = 2014)
	@Column(name = "tax_year")
	private Integer taxYear;

	/**
	 * Field status.
	 */
	@Required(message = ErrorCodes.INVOICE_CATEGORY_STATUS_REQUIRED)
	@Column(name = "status")
	private String status = Constants.TAX_STATUS;

	/**
	 * Field taxRate.
	 */
	@Required(message = ErrorCodes.INVOICE_TAX_RATE_REQUIRED)
	@Max(message = ErrorCodes.INVOICE_TAX_RATE_MAX_VALUE, value = 100)
	@Min(message = ErrorCodes.INVOICE_TAX_RATE_MIN_VALUE, value = 0)
	@Column(name = "tax_rate")
	private int taxRate;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "category_guid")
	@JsonBackReference
	private TaxCategory taxCategory;

	/**
	 * Method getGuid.
	 * 
	 * @return String
	 */
	public String getGuid() {
		return guid;
	}

	/**
	 * Method setGuid.
	 * 
	 * @param guid
	 *            String
	 */
	public void setGuid(String guid) {
		this.guid = guid;
	}

	/**
	 * Method getTaxCode.
	 * 
	 * @return String
	 */
	public String getTaxCode() {
		return taxCode;
	}

	/**
	 * Method setTaxCode.
	 * 
	 * @param taxCode
	 *            String
	 */
	public void setTaxCode(String taxCode) {
		this.taxCode = taxCode;
	}

	/**
	 * Method getCountry.
	 * 
	 * @return String
	 */
	public String getCountry() {
		return country;
	}

	/**
	 * Method setCountry.
	 * 
	 * @param country
	 *            String
	 */
	public void setCountry(String country) {
		this.country = country;
	}

	/**
	 * Method getState.
	 * 
	 * @return String
	 */
	public String getState() {
		return state;
	}

	/**
	 * Method setState.
	 * 
	 * @param state
	 *            String
	 */
	public void setState(String state) {
		this.state = state;
	}

	/**
	 * Method getValidFrom.
	 * 
	 * @return Date
	 */
	public Date getValidFrom() {
		return validFrom == null ? null : (Date) validFrom.clone();
	}

	/**
	 * Method setValidFrom.
	 * 
	 * @param validFrom
	 *            Date
	 */
	public void setValidFrom(Date validFrom) {
		this.validFrom = validFrom == null ? null : (Date) validFrom.clone();
	}

	/**
	 * Method getValidTill.
	 *  
	 *  c
	 * @return Date
	 */
	public Date getValidTill() {
		return validTill == null ? null : (Date) validTill.clone();
	}

	/**
	 * Method setValidTill.
	 * 
	 * @param validTill
	 *            Date
	 */
	public void setValidTill(Date validTill) {
		this.validTill = validTill == null ? null : (Date) validTill.clone();
	}

	/**
	 * Method getTaxYear.
	 * 
	 * @return Integer
	 */
	public Integer getTaxYear() {
		return taxYear;
	}

	/**
	 * Method setTaxYear.
	 * 
	 * @param taxYear
	 *            Integer
	 */
	public void setTaxYear(Integer taxYear) {
		this.taxYear = taxYear;
	}

	/**
	 * Method getStatus.
	 * 
	 * @return String
	 */
	public String getStatus() {
		return status;
	}

	/**
	 * Method setStatus.
	 * 
	 * @param status
	 *            String
	 */
	public void setStatus(String status) {
		this.status = status;
	}

	/**
	 * Method getTaxRate.
	 * 
	 * @return int
	 */
	public int getTaxRate() {
		return taxRate;
	}

	/**
	 * Method setTaxRate.
	 * 
	 * @param taxRate
	 *            int
	 */
	public void setTaxRate(int taxRate) {
		this.taxRate = taxRate;
	}

	public TaxCategory getTaxCategory() {
		return taxCategory;
	}

	public void setTaxCategory(TaxCategory taxCategory) {
		this.taxCategory = taxCategory;
	}

}
